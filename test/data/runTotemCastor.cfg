process TotemCastorTest  = {
	service = MessageLogger
	{
      	untracked vstring destinations = {"warning.txt","error.txt","info.txt","debugmessages.txt"}

      	vstring categories = {  "ForwardSim",
				"CaloSim"}
	vstring debugModules = { "*" }
	PSet error.txt         = {string threshold = "ERROR"  }
	PSet warning.txt       = {string threshold = "WARNING"}
	PSet info.txt          = {string threshold = "INFO"  }
      	PSet debugmessages.txt = {string threshold = "DEBUG"
				PSet INFO     = { int32 limit = 0 }
				PSet DEBUG    = { int32 limit = 0 }
				PSet CaloSim  = { int32 limit = 0 }
				PSet ForwardSim = { int32 limit = 1000000 }
				}
   	}

	service = RandomNumberGeneratorService
	{
      	untracked uint32 sourceSeed = 135799753
      	PSet moduleSeeds =
      		{
        	 untracked uint32 VtxSmeared = 123456789
         untracked uint32 SimG4Object = 9876
      		}
   	}

	include "SimGeneral/HepPDTESSource/data/pdt.cfi"

	source = FlatRandomEGunSource { 
		untracked int32 maxEvents = 5 
		untracked PSet PGunParameters = {
			untracked vint32 PartID = {211,211,211,11,11} 
			untracked double MinEta = 4.40
			untracked double MaxEta = 4.40
			untracked double MinPhi = 1.57
			untracked double MaxPhi = 1.57
			untracked double MinE   = 99.99
			untracked double MaxE   =100.01
		}
		untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
	}

        # Vtx Smearing
        include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"

	#Geometry
        include "SimG4CMS/Forward/test/data/testGeometryXML.cfi"

	#Magnetic Field
	include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

        module o1 = PoolOutputModule {untracked string fileName ="simtotemevent.root"} 
        module SimG4Object = OscarProducer { 
		bool NonBeamEvent = false
		untracked int32 G4EventManagerVerbosity = 0
		untracked int32 G4StackManagerVerbosity = 0
		untracked int32 G4TrackingManagerVerbosity = 0
		bool UseMagneticField = false
		bool OverrideUserStackingAction = true
		bool StoreRndmSeeds = false
		bool RestoreRndmSeeds = false
		string PhysicsTablesDirectory = "PhysicsTables"
		bool StorePhysicsTables = false
		bool RestorePhysicsTables = false
		PSet MagneticField = {
                        double delta = 1.
		}
		PSet Physics = {
			string type = "SimG4Core/Physics/QGSP"
			bool DummyEMPhysics = true
			bool CutsPerRegion = true
			double DefaultCutValue = 10.
			double G4BremsstrahlungThreshold = 0.5 # cut in GeV
			untracked int32 Verbosity = 0                     
		}
		PSet Generator = {
		     bool ApplyPtCuts = true
		     bool ApplyEtaCuts = true
		     bool ApplyPhiCuts = false
		     double MinPhiCut = -3.14159265358979323846 # in radian
		     double MaxPhiCut =  3.1415926535897932384
		     double MinEtaCut = -9.0
		     double MaxEtaCut =  9.0
		     double MinPtCut = 0.040
		     double MaxPtCut = 999999.
		     untracked string InputFileName = "Internal"
		     untracked int32 Verbosity = 0
	        }
		PSet RunAction = { string StopFile = "StopRun" }
		PSet EventAction = {
		     bool CollapsePrimaryVertices = false
		     string StopFile = "StopRun"
		     untracked bool debug = false
		}
		PSet TrackingAction = { untracked bool DetailedTiming = false }
		PSet SteppingAction = {
		     bool   KillBeamPipe = true
		     double CriticalEnergyForVacuum = 2.0
		     double CriticalDensity = 1.e-25
		     untracked int32  Verbosity = 0
		}
		PSet CaloSD = {
		     double EminTrack = 1.0
		     untracked int32  CheckHits = 25
		     untracked bool   UseMap = true
		     untracked int32  Verbosity = 0
		     untracked bool   DetailedTiming = false
		}
		PSet CaloTrkProcessing = {
		     bool   TestBeam  = false
		     double EminTrack = 0.01
		}		     
		PSet CastorSD =	{
		     untracked int32  Verbosity = 0
		}
		PSet TotemSD =	{
		     untracked int32  Verbosity = 0
		}
		VPSet Watchers = {
		{	string type            = "TotemTestGem"
			PSet TotemTestGem = 
			{
				vstring Names         = {"TotemHitsT1",
							"TotemHitsT2Gem",
							"TotemHitsRP"}
				string  FileName      = "TotemTestGem.root"
			}
		}}

	}
	path p1 = { VtxSmeared, SimG4Object }
	endpath outpath = { o1 }

	service = Timing {}
	service = Tracer {}
}		
